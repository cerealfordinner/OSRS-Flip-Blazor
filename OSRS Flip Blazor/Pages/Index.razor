@page "/"
@using OSRS_Flip_Blazor.Data
@using Microsoft.EntityFrameworkCore

<div class="mx-auto" style="width: 500px;">
    <h1>OSRS FLIP TRACKER</h1>
</div>
<h3>Enter a flip</h3>

<div>
    <EditForm Model="_flipToCreate" OnInvalidSubmit="CreateFlip">
        <div class="form-group mb-3">
            <label for="newItemName">Name</label>
            <InputText @bind-Value="_flipToCreate.ItemName" class="form-control" id="flipName"></InputText>
        </div>
        <div class="form-group mb-3">
            <label for="newItemName">Buy</label>
            <InputNumber @bind-Value="_flipToCreate.BuyPrice" class="form-control" id="flipBuy"></InputNumber>
        </div>
        <div class="form-group mb-3">
            <label for="newItemName">Sell</label>
            <InputNumber @bind-Value="_flipToCreate.SellPrice" class="form-control" id="flipSell"></InputNumber>
        </div>
        <div class="form-group mb-3">
            <label for="newItemName">Quantity</label>
            <InputNumber @bind-Value="_flipToCreate.Quantity" class="form-control" id="flipQuantity"></InputNumber>
        </div>
        <DataAnnotationsValidator />
        <ValidationSummary />

        <button type="submit" class="btn btn-success">Save</button>
        <button @onclick="CalculateFlip" class="btn btn-secondary">Calculate</button>

    </EditForm>
</div>


<span><b>Margin: </b>@newMargin<b>Profit: </b>@newProfit</span>

<br />
<br />
<h3>Flip History</h3>
<div>
    <table class="table-responsive table table-hover">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Item Name</th>
                <th scope="col">Buy</th>
                <th scope="col">Sell</th>
                <th scope="col">Margin</th>
                <th scope="col">Quantity</th>
                <th scope="col">Profit</th>
                <th scope="col">CRUD</th>
            </tr>
        </thead>
        <tbody>
            @if (flips != null)
            {
                foreach (var flip in _flips)
                {
                    <tr>
                        <th scope="row">@flip.Id</th>
                        <td>@flip.ItemName</td>
                        <td>@flip.BuyPrice</td>
                        <td>@flip.SellPrice</td>
                        <td>@flip.Margin</td>
                        <td>@flip.Quantity</td>
                        <td>@flip.Profit</td>
                        <td>
                            <button class="btn btn-danger" @onclick="() => DeleteFlip(flip)">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {

    private int newMargin;
    private int newProfit;

    private List<Flip> flips = new();

    private void CalculateFlip()
    {
        newMargin = _flipToCreate.SellPrice - _flipToCreate.BuyPrice;
        newProfit = _flipToCreate.Quantity * newMargin;
    }

    [Inject] FlipDbContext FlipDbContext { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }

    private List<Flip> _flips = new List<Flip>();

    protected override async Task OnInitializedAsync()
    {
        _flips = await FlipDbContext.Flips.ToListAsync();
    }

    private async Task DeleteFlip(Flip flipToDelete)
    {
        FlipDbContext.Flips.Remove(flipToDelete);
        await FlipDbContext.SaveChangesAsync();
        _flips.Remove(flipToDelete);
        StateHasChanged();
    }

    private Flip _flipToCreate = new Flip
        {
            ItemName = "Test"
        };

    private async Task CreateFlip()
    {
        await FlipDbContext.Flips.AddAsync(_flipToCreate);
        await FlipDbContext.SaveChangesAsync();
        StateHasChanged();
        _flipToCreate.ItemName = "Item name";
        _flipToCreate.BuyPrice = 0;
        _flipToCreate.SellPrice = 0;
        _flipToCreate.Quantity = 0;

    }

    }